@{
    Layout = "";
}
<h2>Send notifications when tasks are:</h2>
<div class="col-md-8">
    <section id="configSection">
        <form id="configForm">
            <input type="radio" name="notificationType" value="Create" onclick="onClick()"> Created
            <br>
            <br>
            <input type="radio" name="notificationType" value="Update" onclick="onClick()"> Updated
        </form>
    </section>
</div>

<script src="https://unpkg.com/@microsoft/teams-js@1.3.3/dist/MicrosoftTeams.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>

<script type="text/javascript">

        function onClick() {
            microsoftTeams.settings.setValidityState(true);
        }

        microsoftTeams.initialize();
        microsoftTeams.settings.registerOnSaveHandler(function (saveEvent) {
            var radios = document.getElementsByName('notificationType');

            var eventType = '';
            if (radios[0].checked) {
                eventType = radios[0].value;
            } else {
                eventType = radios[1].value;
            }

            microsoftTeams.settings.setSettings({
                 entityId: eventType,
                    contentUrl: "@(TeamsToDoAppConnector.Utils.AppSettings.BaseUrl)/Connector/Setup",
                 configName: eventType
                });

            microsoftTeams.settings.getSettings(function (settings) {

                // We get the Webhook URL in settings.webhookUrl which needs to be saved.
                $.ajax({
                    url: '/Connector/Save',
                    type: 'post',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        webhookUrl: settings.webhookUrl,
                        eventType: eventType
                    }),
                    success: function (data, textStatus, jQxhr) {
                        console.log('webhook created successfully.');
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        console.log('error', errorThrown);
                    }
                });
            });

            saveEvent.notifySuccess();
        });

        microsoftTeams.settings.registerOnRemoveHandler(function (removeEvent) {
            var removeCalled = true;
        });

</script>
